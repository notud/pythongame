#德州扑克
import random
#公共牌
public=[]
playernumber=3
#普通扑克牌
class Card:
    def __init__(self, number):
#编号
        self.number = number
#花色
        if self.number==54:
            self.flower = '大王'
        elif self.number==53:
            self.flower = '小王'
        elif 39<self.number<53:
            self.flower = '黑桃'
        elif 26<self.number<40:
            self.flower = '红桃'
        elif 13<self.number<27:
            self.flower = '梅花'
        elif 0<self.number<14:
            self.flower = '方块'
#数字
        if number <53:
            self.num = number % 13
            #A比较大
            if self.num==1:
                self.num=14
#小王
        elif number == 53:
            self.num = 14
#大王
        elif number == 54:
            self.num = 15

    def __str__(self):
        if self.number < 53:
            return str(self.flower)+str(self.num)
        else:
            return str(self.flower)

    def compare(self, other):
        if self.number >= other.number:
            return 1
        else:
            return 0

#德州扑克（去掉大小王）
class Dezhoucard(Card):

    def __init__(self,number):
        super().__init__(number)

# 胜利条件判断
    def success(playercard,publiccard):
        a1=Dezhoucard(playercard[0])
        a2=Dezhoucard(playercard[1])
        a3=Dezhoucard(publiccard[0])
        a4=Dezhoucard(publiccard[1])
        a5=Dezhoucard(publiccard[2])
        a6=Dezhoucard(publiccard[3])
        a7=Dezhoucard(publiccard[4])

        list=[a1.num,a2.num,a3.num,a4.num,a5.num,a6.num,a7.num]
        list.sort()
        list.reverse()
        list2=[a1.flower,a2.flower,a3.flower,a4.flower,a5.flower,a6.flower,a7.flower]
        list3 = [a1.num, a2.num, a3.num, a4.num, a5.num,a6.num,a7.num]
        meihua=list2.count('梅花')
        hongtao=list2.count('红桃')
        heitao=list2.count('黑桃')
        fangkuai=list2.count('方块')
        number1 = list3.count(14)
        number2 = list3.count(2)
        number3 = list3.count(3)
        number4 = list3.count(4)
        number5 = list3.count(5)
        number6 = list3.count(6)
        number7 = list3.count(7)
        number8 = list3.count(8)
        number9 = list3.count(9)
        number10 = list3.count(10)
        number11 = list3.count(11)
        number12 = list3.count(12)
        number13 = list3.count(13)
        listnumber=[number1,number2,number3,number4,number5,number6,number7,number8,number9,number10,number11,number12,number13]
        listnumber.sort()
        listnumber.reverse()
        lingshi=[]
# 皇家同花顺
        if (meihua==5 or heitao==5 or hongtao==5 or fangkuai==5)and(list[0]==14 and list[1]==13 and list[2]==12 and
        list[3] and list[4]==10):
            return 10
#同花顺
        if meihua==5:
            for j in range(5):
                i=list2.index('梅花')
                list2.pop(i)
                lingshi.append(list3.pop(i))
            lingshi.sort()
            lingshi.reverse()
            if lingshi[0]==lingshi[1]+1 and lingshi[1]==lingshi[2]+1 and lingshi[2]==lingshi[3]+1\
                and lingshi[3]==lingshi[4]+1:
                return 9

        elif heitao==5:
            for j in range(5):
                i=list2.index('黑桃')
                list2.pop(i)
                lingshi.append(list3.pop(i))
            lingshi.sort()
            lingshi.reverse()
            if lingshi[0]==lingshi[1]+1 and lingshi[1]==lingshi[2]+1 and lingshi[2]==lingshi[3]+1 \
                and lingshi[3]==lingshi[4]+1:
                return 9

        elif hongtao == 5:
            for j in range(5):
                i=list2.index('红桃')
                list2.pop(i)
                lingshi.append(list3.pop(i))
            lingshi.sort()
            lingshi.reverse()
            if lingshi[0]==lingshi[1]+1 and lingshi[1]==lingshi[2]+1 and lingshi[2]==lingshi[3]+1 \
                and lingshi[3]==lingshi[4]+1:
                return 9

        elif fangkuai == 5:
            for j in range(5):
                i=list2.index('方块')
                list2.pop(i)
                lingshi.append(list3.pop(i))
            lingshi.sort()
            lingshi.reverse()
            if lingshi[0] == lingshi[1]+1 and lingshi[1] == lingshi[2]+1 and lingshi[2]==lingshi[3]+1 \
                and lingshi[3] == lingshi[4]+1:
                return 9
            return 9
#四条
        if listnumber[0] == 4:
            return 8
#葫芦
        if listnumber[0] == 3 and listnumber[1] == 2:
            return 7
#同花
        if meihua == 5 or heitao == 5 or hongtao == 5 or fangkuai == 5:
            return 6
#顺子
        if (list[0] == list[1]+1 and list[1] == list[2]+1 and list[2] == list[3]+1 and list[3]==list[4]+1) or\
        (list[1] == list[2] + 1 and list[2] == list[3] + 1 and list[3] == list[4] + 1 and list[4] == list[5] + 1) or \
        (list[2] == list[3] + 1 and list[3] == list[4] + 1 and list[4] == list[5] + 1 and list[5] == list[6] + 1):
            return 5
#三条
        if listnumber[0] == 3:
            return 4
#两对
        if listnumber[0] == listnumber[1] == 2:
            return 3
#对子
        if (number1 == 2 or number2 == 2 or number3 == 2 or number4 == 2 or number5 == 2 or number6 == 2 or number7 == 2\
            or number8 == 2 or number9 == 2 or number10 == 2 or number11 == 2 or number12 == 2 or number13 == 2):
            return 2
#高牌
        else:
            return 1


#随机发牌(玩家人数，每位玩家手牌数)
def submit(playernumber, cardnumber):
    cardnow = 52
#列表
    player = []
    nowplayer = []
    card = list(range(1, 53))
    for i in range(1, playernumber+1):
        if i != 1:
            player.append(nowplayer)
            nowplayer = []
        for j in range(1, cardnumber+1):
            b = random.randint(0, cardnow-1)
            nowplayer.append(card.pop(b))
            cardnow -= 1
    player.append(nowplayer)
    for i in range(5):
        b = random.randint(0, cardnow-1)
        public.append(card.pop(b))
        cardnow -= 1
    return player

#3个人玩
allplayer = submit(playernumber, 2)
print(allplayer)
print(public)

playersuccess=[]
playersuccess2=[]
#记录牌型
for i in range(playernumber):
    playersuccess.append(Dezhoucard.success(allplayer[i],public))
    playersuccess2.append(Dezhoucard.success(allplayer[i],public))

print(playersuccess)
playersuccess.sort()
playersuccess.reverse()
print(playersuccess)
#比牌型
if playersuccess[0] > playersuccess[1]:
    print("胜利者是第"+str(playersuccess2.index(playersuccess[0])+1)+'位玩家')
#比牌的大小

